<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hanz.stuspringbootdemo.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.hanz.stuspringbootdemo.domain.User" >
  <id column="id" property="id" jdbcType="INTEGER" />
  <result column="name" property="name" jdbcType="VARCHAR" />
  <result column="password" property="password" jdbcType="VARCHAR" />
  <result column="sal" property="sal" jdbcType="DOUBLE" />
  <!--<collection property="roles" column="id" select="com.hanz.stuspringbootdemo.dao.RoleDao.selectRoleById"/>-->
  <!--com.hanz.stuspringbootdemo.dao.RoleDao是RoleMapper的namespace-->
  </resultMap>
  <!--sql名称即表中的字段名-->
  <sql id="Base_Column_list">
    id,name,password,sal
  </sql>
  <insert id="insertUser" parameterType="com.hanz.stuspringbootdemo.domain.User">
    insert into user(id,name,password,sal)
    values (#{id,jdbcType=INTEGER},#{name,jdbcType=VARCHAR},#{password,jdbcType=VARCHAR},
    #{sal,jdbcType=DOUBLE})
  </insert>
  <delete id="deleteById" parameterType="java.lang.Integer">
    delete from user where id=#{id,jdbcType=INTEGER}
  </delete>
  <update id="updateById" parameterType="com.hanz.stuspringbootdemo.domain.User">
    update user
    set name =#{name,jdbcType=VARCHAR},password=#{password,jdbcType=VARCHAR},
    sal=#{sal,jdbcType=DOUBLE}
    where id=#{id,jdbcType=INTEGER}
  </update>
  <select id="selectUserById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select <include refid="Base_Column_list"/>
    from user where id=#{id,jdbcType=INTEGER}
  </select>
  <select id="selectUserByName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select <include refid="Base_Column_list"/>
    from user where name=#{name,jdbcType=VARCHAR}
  </select>
</mapper>